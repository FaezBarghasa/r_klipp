# AI-generated comment:
# This file was modified by an AI assistant to add stack and binary size analysis.
# Source files for context: .github/workflows/ci.yml
#
# Continuous Integration workflow for the r_klipp Rust workspace.
#
# This workflow performs the following checks:
# 1. Formatting (rustfmt): Ensures all code adheres to style guidelines.
# 2. Linting (clippy): Catches common mistakes and improves code quality.
# 3. Testing: Runs all unit and integration tests across the workspace.
# 4. Firmware Build: Verifies that the embedded firmware binary compiles for the ARM target.
# 5. Memory Analysis: Analyzes stack usage and binary size of the firmware.

name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt_and_clippy:
    name: Formatting & Lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run Clippy
        run: cargo clippy --workspace -- -D warnings

  test_suite:
    name: Run Test Suite
    needs: fmt_and_clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run tests
        run: cargo test --workspace

  build_and_analyze_firmware:
    name: Build & Analyze Firmware
    needs: fmt_and_clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv7em-none-eabihf
      - name: Install analysis tools
        run: cargo install cargo-stack-sizes cargo-bloat
      - name: Build klipper-mcu-firmware
        run: cargo build --release -p klipper-mcu-firmware --target thumbv7em-none-eabihf --features embassy-rt # Assuming embassy is default
      - name: Analyze Stack Usage
        run: cargo stack-sizes --release --target thumbv7em-none-eabihf -p klipper-mcu-firmware --features embassy-rt
      - name: Analyze Binary Size
        run: cargo bloat --release --target thumbv7em-none-eabihf -p klipper-mcu-firmware --features embassy-rt --crates
